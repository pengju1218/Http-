//import proguard.gradle.ProGuardTask

apply plugin: 'java'


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('com.google.android:android:4.1.1.4') {
        transitive false
    }
}
sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
}

compileJava {
    sourceCompatibility '1.7'
    targetCompatibility '1.7'
}



tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
/*
task cleanJars(type: Delete) {
    delete 'build/libs*/
/*.*'
}

task cleanBuildDir(type: Delete) {
    delete rootProject.buildDir
}

def jarPath = 'build/libs/';
def jarName = 'lite-http-' + rootProject.versionName + '.jar';
def jarProName = 'lite-http-pro-' + rootProject.versionName + '.jar';

task makeJar(type: Jar, dependsOn: ['assembleRelease']) {
    archiveName jarName;
    destinationDir = file('build/libs')
    from('build/intermediates/classes/release/')
    exclude('test/', 'BuildConfig.class', 'R.class', 'R\$*.class', 'META-INF/')
}

def androidSDKDir = plugins.getPlugin('com.android.library').sdkHandler.getSdkFolder()
def androidJarDir = androidSDKDir.toString() + '/platforms/' + android.compileSdkVersion + '/android.jar'

task makeProguardJar(type: ProGuardTask, dependsOn: ['makeJar']) {
    libraryjars(androidJarDir)
    configuration 'proguard-rules.pro'
    injars(jarPath + jarName)
    outjars(jarPath + jarProName)
}*/
